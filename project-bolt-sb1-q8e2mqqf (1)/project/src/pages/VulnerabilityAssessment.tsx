import React, { useState } from 'react';
import { Shield, Search, AlertTriangle, TrendingDown, MapPin, Users, Zap, DollarSign, Thermometer, Droplets, Wheat, Factory } from 'lucide-react';
import { VulnerabilityCard } from '../components/VulnerabilityCard';
import { VulnerabilityMap } from '../components/VulnerabilityMap';

export const VulnerabilityAssessment: React.FC = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedRegion, setSelectedRegion] = useState('all');

  const vulnerabilities = [
    {
      id: 1,
      country: "Ukraine",
      region: "Eastern Europe",
      overallRisk: "Critical",
      vulnerabilities: {
        military: { level: "Critical", score: 95, description: "Active warfare, infrastructure destruction" },
        economic: { level: "Critical", score: 90, description: "GDP contracted 30%, massive reconstruction needs" },
        energy: { level: "High", score: 85, description: "Power grid targeted, winter energy crisis" },
        food: { level: "High", score: 80, description: "Agricultural exports disrupted, grain corridor issues" },
        cyber: { level: "High", score: 75, description: "Constant cyber attacks on critical infrastructure" },
        climate: { level: "Medium", score: 45, description: "Environmental damage from conflict" },
        social: { level: "High", score: 85, description: "6M refugees, internal displacement crisis" },
        political: { level: "Medium", score: 60, description: "Wartime governance, martial law" }
      },
      keyThreats: [
        "Ongoing military conflict with infrastructure targeting",
        "Energy infrastructure systematically destroyed",
        "Economic collapse requiring massive international aid",
        "Humanitarian crisis with millions displaced",
        "Cyber warfare targeting critical systems"
      ],
      lastUpdate: "2025-01-15"
    },
    {
      id: 2,
      country: "Taiwan",
      region: "East Asia",
      overallRisk: "High",
      vulnerabilities: {
        military: { level: "High", score: 80, description: "Military buildup across Taiwan Strait" },
        economic: { level: "High", score: 75, description: "Semiconductor dependency, trade vulnerabilities" },
        energy: { level: "Critical", score: 90, description: "99% energy import dependency" },
        food: { level: "High", score: 70, description: "70% food import dependency" },
        cyber: { level: "High", score: 85, description: "Constant state-sponsored cyber attacks" },
        climate: { level: "High", score: 75, description: "Typhoons, earthquakes, sea level rise" },
        social: { level: "Medium", score: 50, description: "Aging population, political polarization" },
        political: { level: "High", score: 80, description: "Cross-strait tensions, diplomatic isolation" }
      },
      keyThreats: [
        "Military escalation in Taiwan Strait",
        "Economic blockade or sanctions risk",
        "Critical semiconductor supply chain disruption",
        "Energy supply completely dependent on imports",
        "Cyber attacks on critical infrastructure"
      ],
      lastUpdate: "2025-01-15"
    },
    {
      id: 3,
      country: "Lebanon",
      region: "Middle East",
      overallRisk: "Critical",
      vulnerabilities: {
        military: { level: "High", score: 75, description: "Regional conflicts, Hezbollah presence" },
        economic: { level: "Critical", score: 95, description: "Currency collapse, banking crisis" },
        energy: { level: "Critical", score: 90, description: "Electricity shortages, fuel crisis" },
        food: { level: "High", score: 80, description: "Import dependency, wheat shortage" },
        cyber: { level: "Medium", score: 55, description: "Limited cyber infrastructure" },
        climate: { level: "High", score: 70, description: "Water scarcity, refugee burden" },
        social: { level: "Critical", score: 90, description: "Mass emigration, social unrest" },
        political: { level: "Critical", score: 95, description: "Government collapse, sectarian tensions" }
      },
      keyThreats: [
        "Complete economic and financial system collapse",
        "Political vacuum and governance failure",
        "Energy crisis with widespread blackouts",
        "Mass emigration of skilled population",
        "Regional conflict spillover effects"
      ],
      lastUpdate: "2025-01-14"
    },
    {
      id: 4,
      country: "Bangladesh",
      region: "South Asia",
      overallRisk: "High",
      vulnerabilities: {
        military: { level: "Medium", score: 45, description: "Regional tensions, internal security" },
        economic: { level: "High", score: 70, description: "Textile dependency, inflation pressure" },
        energy: { level: "High", score: 75, description: "Power shortages, import dependency" },
        food: { level: "High", score: 80, description: "Rice production vulnerable to climate" },
        cyber: { level: "Medium", score: 50, description: "Growing digital infrastructure risks" },
        climate: { level: "Critical", score: 95, description: "Sea level rise, extreme weather" },
        social: { level: "High", score: 75, description: "High population density, urbanization" },
        political: { level: "High", score: 70, description: "Political instability, protests" }
      },
      keyThreats: [
        "Climate change impacts: flooding, cyclones, sea level rise",
        "Rohingya refugee crisis straining resources",
        "Garment industry vulnerability to global shocks",
        "Water scarcity and river system changes",
        "Political unrest and governance challenges"
      ],
      lastUpdate: "2025-01-13"
    },
    {
      id: 5,
      country: "Sri Lanka",
      region: "South Asia",
      overallRisk: "Critical",
      vulnerabilities: {
        military: { level: "Medium", score: 40, description: "Post-conflict recovery, limited threats" },
        economic: { level: "Critical", score: 95, description: "Debt default, currency crisis" },
        energy: { level: "Critical", score: 90, description: "Fuel shortages, power cuts" },
        food: { level: "High", score: 85, description: "Food insecurity, import difficulties" },
        cyber: { level: "Low", score: 30, description: "Limited cyber infrastructure" },
        climate: { level: "High", score: 75, description: "Monsoon dependency, coastal vulnerability" },
        social: { level: "Critical", score: 90, description: "Mass protests, social unrest" },
        political: { level: "Critical", score: 85, description: "Government instability, legitimacy crisis" }
      },
      keyThreats: [
        "Economic collapse and sovereign debt default",
        "Severe fuel and energy shortages",
        "Food security crisis and malnutrition",
        "Political instability and governance breakdown",
        "Social unrest and mass emigration"
      ],
      lastUpdate: "2025-01-12"
    },
    {
      id: 6,
      country: "Haiti",
      region: "Caribbean",
      overallRisk: "Critical",
      vulnerabilities: {
        military: { level: "Critical", score: 90, description: "Gang control, security collapse" },
        economic: { level: "Critical", score: 95, description: "Economic paralysis, extreme poverty" },
        energy: { level: "Critical", score: 85, description: "Infrastructure destroyed, fuel shortages" },
        food: { level: "Critical", score: 90, description: "Severe food insecurity, malnutrition" },
        cyber: { level: "Low", score: 25, description: "Limited digital infrastructure" },
        climate: { level: "High", score: 80, description: "Hurricane vulnerability, earthquakes" },
        social: { level: "Critical", score: 95, description: "Humanitarian crisis, mass displacement" },
        political: { level: "Critical", score: 95, description: "State collapse, no effective government" }
      },
      keyThreats: [
        "Complete state collapse and gang control",
        "Humanitarian catastrophe with mass starvation",
        "Cholera outbreak and health system collapse",
        "Mass migration and refugee crisis",
        "International intervention necessity"
      ],
      lastUpdate: "2025-01-11"
    }
  ];

  const categories = ['all', 'military', 'economic', 'energy', 'food', 'cyber', 'climate', 'social', 'political'];
  const regions = ['all', 'Eastern Europe', 'East Asia', 'Middle East', 'South Asia', 'Caribbean', 'Africa'];

  const filteredVulnerabilities = vulnerabilities.filter(vuln => {
    const matchesSearch = vuln.country.toLowerCase().includes(searchQuery.toLowerCase());
    const matchesRegion = selectedRegion === 'all' || vuln.region === selectedRegion;
    const matchesCategory = selectedCategory === 'all' || 
      Object.entries(vuln.vulnerabilities).some(([key, value]) => 
        key === selectedCategory && (value.level === 'Critical' || value.level === 'High')
      );
    
    return matchesSearch && matchesRegion && matchesCategory;
  });

  const getCategoryIcon = (category: string) => {
    const icons = {
      military: AlertTriangle,
      economic: DollarSign,
      energy: Zap,
      food: Wheat,
      cyber: Shield,
      climate: Thermometer,
      social: Users,
      political: Factory
    };
    return icons[category as keyof typeof icons] || Shield;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950">
      <div className="max-w-7xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <Shield className="w-10 h-10 text-orange-400" />
            <h2 className="text-4xl font-bold text-transparent bg-gradient-to-r from-orange-400 via-red-300 to-orange-500 bg-clip-text">
              Country Vulnerability Assessment
            </h2>
          </div>
          <p className="text-gray-400 text-lg max-w-3xl mx-auto">
            Comprehensive analysis of national vulnerabilities across military, economic, energy, and social dimensions
          </p>
        </div>

        {/* Global Risk Overview */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
          <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-4 border border-slate-700">
            <div className="flex items-center gap-2 mb-2">
              <AlertTriangle className="w-5 h-5 text-red-400" />
              <span className="text-sm text-gray-400">Critical Risk</span>
            </div>
            <p className="text-2xl font-bold text-red-400">4</p>
            <p className="text-xs text-gray-500">Countries</p>
          </div>
          <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-4 border border-slate-700">
            <div className="flex items-center gap-2 mb-2">
              <TrendingDown className="w-5 h-5 text-orange-400" />
              <span className="text-sm text-gray-400">High Risk</span>
            </div>
            <p className="text-2xl font-bold text-orange-400">2</p>
            <p className="text-xs text-gray-500">Countries</p>
          </div>
          <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-4 border border-slate-700">
            <div className="flex items-center gap-2 mb-2">
              <Users className="w-5 h-5 text-yellow-400" />
              <span className="text-sm text-gray-400">At Risk Pop.</span>
            </div>
            <p className="text-2xl font-bold text-yellow-400">180M</p>
            <p className="text-xs text-gray-500">People</p>
          </div>
          <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-4 border border-slate-700">
            <div className="flex items-center gap-2 mb-2">
              <MapPin className="w-5 h-5 text-blue-400" />
              <span className="text-sm text-gray-400">Regions</span>
            </div>
            <p className="text-2xl font-bold text-blue-400">6</p>
            <p className="text-xs text-gray-500">Affected</p>
          </div>
        </div>

        {/* Vulnerability Map */}
        <div className="mb-8">
          <VulnerabilityMap vulnerabilities={vulnerabilities} />
        </div>

        {/* Search and Filters */}
        <div className="bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700 mb-8">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
              <input
                type="text"
                placeholder="Search countries..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="w-full pl-10 pr-4 py-3 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent text-white placeholder-gray-400"
              />
            </div>
            <div>
              <select
                value={selectedRegion}
                onChange={(e) => setSelectedRegion(e.target.value)}
                className="w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 text-white"
              >
                {regions.map(region => (
                  <option key={region} value={region}>
                    {region === 'all' ? 'All Regions' : region}
                  </option>
                ))}
              </select>
            </div>
            <div>
              <select
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 text-white"
              >
                {categories.map(category => (
                  <option key={category} value={category}>
                    {category === 'all' ? 'All Categories' : category.charAt(0).toUpperCase() + category.slice(1)}
                  </option>
                ))}
              </select>
            </div>
          </div>
        </div>

        {/* Vulnerability Cards */}
        <div className="space-y-6">
          {filteredVulnerabilities.map(vulnerability => (
            <VulnerabilityCard key={vulnerability.id} vulnerability={vulnerability} />
          ))}
        </div>
      </div>
    </div>
  );
};